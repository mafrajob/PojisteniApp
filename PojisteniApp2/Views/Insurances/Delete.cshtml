@model PojisteniApp2.Models.Insurance

@{
    ViewData["Title"] = "Odstranění pojištění";
}

<div class="row bg-dark bg-opacity-50 py-3 ps-4 pe-2 d-flex">
    <div class="col-auto text-white d-flex align-items-center">
        <h1>Smazat pojištnění?</h1>
    </div>
    <div class="col d-flex align-items-center justify-content-end"> 
        <form asp-action="Delete">
            <input type="hidden" asp-for="InsuranceId" />
            <span class="disabled-title-wrapper">
                <button type="submit" class="btn btn-lg btn-danger @ViewBag.Disabled" tabindex="1"><i class="fa-solid fa-trash-can"></i></button>
            </span>
        </form>
    </div>
</div>
<div class="row dl-local-style bg-light py-2 py-md-4 px-3 px-md-5 mt-1 text-center text-sm-start">
    <dl class="col-12 col-sm-6 col-lg-5 col-xl-4 d-flex flex-column justify-content-evenly m-0">
        @* <div> to keep elements always together *@
        <div>
            <dt>
                @Html.DisplayNameFor(model => model.InsuranceType)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.InsuranceType.InsuranceTypeName)
            </dd>
        </div>
        <div>
            <dt>
                @Html.DisplayNameFor(model => model.InsuranceAmount)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.InsuranceAmount)
            </dd>
        </div>
        <div>
            <dt>
                @Html.DisplayNameFor(model => model.InsuranceSubject)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.InsuranceSubject)
            </dd>
        </div>
    </dl>
    <dl class="col-12 col-sm-6 col-lg-5 col-xl-4 d-flex flex-column justify-content-evenly m-0">
        <div>
            <dt>
                @Html.DisplayNameFor(model => model.ValidFrom)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.ValidFrom)
            </dd>
        </div>
        <div>
            <dt>
                @Html.DisplayNameFor(model => model.ValidTo)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.ValidTo)
            </dd>
        </div>
        <div>
            <dt>
                @Html.DisplayNameFor(model => model.Person)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Person.FullNameWithAddress)
            </dd>
        </div>
    </dl>
</div>