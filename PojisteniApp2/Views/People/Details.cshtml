@model PojisteniApp2.Models.Person

@{
    ViewData["Title"] = "Detail pojištěnce";
}

<div class="row bg-dark bg-opacity-50 py-3 ps-4 pe-2 d-flex">
	<div class="col-auto text-white d-flex align-items-center">
        <h1 class="text-capitalize">@Html.DisplayFor(model => model.FirstName) @Html.DisplayFor(model => model.LastName)</h1>
    </div>
    <div class="col text-end d-flex align-items-center justify-content-end">
        <a asp-action="Edit" class="btn btn-lg btn-secondary" asp-route-id="@Model?.PersonId"><i class="fa-solid fa-pen-to-square"></i></a>
        <a asp-action="Delete" class="btn btn-lg btn-secondary ms-1" asp-route-id="@Model?.PersonId"><i class="fa-solid fa-trash-can"></i></a>
    </div>
</div>
<div class="row dl-local-style bg-light py-2 py-md-4 px-3 px-md-5 mt-1 text-center text-sm-start">
	<div class="col-12 col-sm-auto me-2 me-md-4 mb-3 mb-sm-0">
		<a asp-action="Edit" asp-route-id="@Model?.PersonId">
			<img src="@ViewBag.ImageDataUrl" class="img-fluid img-profile" />
		</a>
	</div>
	<dl class="col-12 col-sm-auto d-flex flex-column justify-content-evenly m-0">
		@* <div> to keep elements always together *@
		<div>
			<dt>
				@Html.DisplayNameFor(model => model.Email)
			</dt>
			<dd>
				@Html.DisplayFor(model => model.Email)
			</dd>
		</div>
		<div>
			<dt>
				@Html.DisplayNameFor(model => model.Phone)
			</dt>
			<dd>
				@Html.DisplayFor(model => model.Phone)
			</dd>
		</div>
	</dl>
	<dl class="col-12 col-sm-auto d-flex flex-column justify-content-evenly m-0">
		<div>
			<dt>
				@Html.DisplayNameFor(model => model.Street)
			</dt>
			<dd>
				@Html.DisplayFor(model => model.Street)
			</dd>
		</div>
		<div>
			<dt>
				@Html.DisplayNameFor(model => model.PostalCode) a @Html.DisplayNameFor(model => model.City)
			</dt>
			<dd>
				@Html.DisplayFor(model => model.PostalCode)<text>&nbsp&nbsp</text>@Html.DisplayFor(model => model.City)
			</dd>
		</div>
	</dl>
</div>
<div class="row bg-light py-3 ps-2 ps-md-3 pe-2 d-flex mt-1">
    <div class="col-auto d-flex align-items-center">
        <h3>Uzavřená pojištění</h3>
    </div>
    <div class="col text-end d-flex align-items-center justify-content-end">
		<a asp-controller="Insurances" asp-action="Create" asp-route-id="@Model?.PersonId" class="btn btn-lg btn-primary"><i class="fa-solid fa-plus"></i></a>
    </div>
</div>
@if(Model?.Insurances.Count > 0)
{
	<div class="row bg-light px-2 pb-2">
		<div class="col">
			<table class="table table-hover">
				<thead>
					<tr>
						<th>
							@Html.DisplayNameFor(model => model.Insurances[0].InsuranceId)
						</th>
						<th>
							@Html.DisplayNameFor(model => model.Insurances[0].InsuranceType)
						</th>
						<th>
							@Html.DisplayNameFor(model => model.Insurances[0].InsuranceAmount)
						</th>
						<th>
							@Html.DisplayNameFor(model => model.Insurances[0].ValidFrom)
						</th>
						<th>
							@Html.DisplayNameFor(model => model.Insurances[0].ValidTo)
						</th>
						<th></th>
					</tr>
				</thead>
				<tbody>
					@foreach (var item in Model.Insurances)
					{
						<tr onclick="window.location.href = '@Url.Action("Details", "Insurances", new { id = item.InsuranceId })'">
							<td>
								@Html.DisplayFor(modelItem => item.InsuranceId)
							</td>
							<td>
								@Html.DisplayFor(modelItem => item.InsuranceType.InsuranceTypeName)
							</td>
							<td>
								@Html.DisplayFor(modelItem => item.InsuranceAmount)
							</td>
							<td>
								@Html.DisplayFor(modelItem => item.ValidFrom)
							</td>
							<td>
								@Html.DisplayFor(modelItem => item.ValidTo)
							</td>
							<td class="text-end">
								<a class="btn btn-outline-secondary mb-1" asp-controller="Insurances" asp-action="Edit" asp-route-id="@item.InsuranceId"><i class="fa-solid fa-pen-to-square"></i></a>
								<a class="btn btn-outline-secondary mb-1" asp-controller="Insurances" asp-action="Delete" asp-route-id="@item.InsuranceId"><i class="fa-solid fa-trash-can"></i></a>
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	</div>
}